syntax = "proto2";

package ship;

// server sends to client
message Ship{
    enum Alignment{
        ALLY = 0;
        ENEMY = 1;
    }

    optional Alignment alignment = 1;

    optional  string name = 2;

    enum Class{
        Corvette = 0;
        Frigate = 1;
        Cruiser = 2;
        Destroyer = 3;
        Carrier = 4;
        Dreadnought = 5;
    }

    optional Class  class_ship = 3;

    optional  float length = 4;

    optional  int32 size = 5;

    optional  bool armed = 6;

    message Officer{
        optional  string first_name = 1;
        optional  string last_name = 2;
        optional  string rank = 3;
    }

    repeated Officer officers = 7;

}

// message sent to server
message Coordinates{
    optional int32 hours = 1;
    optional int32 minutes = 2;
    optional double seconds = 3;
}

// опрелелить тип передаваемых сообщений от клиента к серверу
service ServerResponce{
    // when client send sequence of messages (2 Coordinates) and wait till
    // server returns responce as sequence Ship messages (1-10 messages/ random number)
    rpc RouteChat(stream Coordinates) returns (stream Ship);
}